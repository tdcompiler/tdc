D [0, 73]["void", "main", "{", "}", "long", "foo", "return", "2", "L"]
 +-D.Module [0, 73]["void", "main", "{", "}", "long", "foo", "return", "2", "L"]
    +-D.DeclDefs [0, 73]["void", "main", "{", "}", "long", "foo", "return", "2", "L"]
       +-D.DeclDef [29, 46]["void", "main", "{", "}"]
       |  +-D.Declaration [29, 46]["void", "main", "{", "}"]
       |     +-D.Decl [29, 46]["void", "main", "{", "}"]
       |        +-D.basicFunction [29, 46]["void", "main", "{", "}"]
       |           +-D.BasicType [29, 34]["void"]
       |           |  +-D.BasicTypeX [29, 33]["void"]
       |           +-D.Declarator [34, 41]["main"]
       |           |  +-D.Identifier [34, 38]["main"]
       |           +-D.FunctionBody [41, 46]["{", "}"]
       |              +-D.BlockStatement [41, 46]["{", "}"]
       +-D.DeclDef [46, 73]["long", "foo", "return", "2", "L"]
          +-D.Declaration [46, 73]["long", "foo", "return", "2", "L"]
             +-D.Decl [46, 73]["long", "foo", "return", "2", "L"]
                +-D.basicFunction [46, 73]["long", "foo", "return", "2", "L"]
                   +-D.BasicType [46, 51]["long"]
                   |  +-D.BasicTypeX [46, 50]["long"]
                   +-D.Declarator [51, 57]["foo"]
                   |  +-D.Identifier [51, 54]["foo"]
                   +-D.FunctionBody [57, 73]["return", "2", "L"]
                      +-D.BlockStatement [57, 73]["return", "2", "L"]
                         +-D.StatementList [60, 71]["return", "2", "L"]
                            +-D.Statement [60, 71]["return", "2", "L"]
                               +-D.NonEmptyStatement [60, 71]["return", "2", "L"]
                                  +-D.NonEmptyStatementNoCaseNoDefault [60, 71]["return", "2", "L"]
                                     +-D.ReturnStatement [60, 71]["return", "2", "L"]
                                        +-D.Expression [67, 69]["2", "L"]
                                           +-D.CommaExpression [67, 69]["2", "L"]
                                              +-D.AssignExpression [67, 69]["2", "L"]
                                                 +-D.ConditionalExpression [67, 69]["2", "L"]
                                                    +-D.OrOrExpression [67, 69]["2", "L"]
                                                       +-D.AndAndExpression [67, 69]["2", "L"]
                                                          +-D.OrExpression [67, 69]["2", "L"]
                                                             +-D.XorExpression [67, 69]["2", "L"]
                                                                +-D.AndExpression [67, 69]["2", "L"]
                                                                   +-D.ShiftExpression [67, 69]["2", "L"]
                                                                      +-D.AddExpression [67, 69]["2", "L"]
                                                                         +-D.MulExpression [67, 69]["2", "L"]
                                                                            +-D.UnaryExpression [67, 69]["2", "L"]
                                                                               +-D.PowExpression [67, 69]["2", "L"]
                                                                                  +-D.PostfixExpression [67, 69]["2", "L"]
                                                                                     +-D.PrimaryExpression [67, 69]["2", "L"]
                                                                                        +-D.IntegerLiteral [67, 69]["2", "L"]
                                                                                           +-D.integerWithSuffix [67, 69]["2", "L"]
                                                                                              +-D.Integer [67, 68]["2"]
                                                                                              |  +-D.DecimalInteger [67, 68]["2"]
                                                                                              +-D.IntegerSuffix [68, 69]["L"]
